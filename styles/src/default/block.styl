@import "constants";

make-layout($prefix, $separator, $postfix) {
// horizontal layout
  {$prefix}layout{$separator}horizontal{$postfix} {
    display: flex;
    flex-direction: row;
  }

// reverse horizontal layout
  {$prefix}layout{$separator}horizontal{$separator}reverse{$postfix} {
    display: flex;
    flex-direction: row-reverse;
  }

// vertical layout
  {$prefix}layout{$separator}vertical{$postfix} {
    display: flex;
    flex-direction: column;
  }

// reverse vertical layout
  {$prefix}layout{$separator}vertical{$separator}reverse{$postfix} {
    display: flex;
    flex-direction: column-reverse;
  }

// hide an element
  {$prefix}hide{$postfix} {
    display: none;
  }

  for $i in (1..12) {
  // grow of element
    {$prefix}grow{$separator}{$i}{$postfix} {
      flex-grow: $i;
    }

  // shrink of elements
    {$prefix}shrink{$separator}{$i}{$postfix} {
      flex-shrink: $i;
    }

  // order of elements
    {$prefix}order{$separator}{$i}{$postfix} {
      order: $i;
    }

  // 12 column grid
    {$prefix}grid{$separator}{$i}{$postfix} {
      flex-basis: (100 / 12 * $i) %;
      max-width: (100 / 12 * $i) %;
    }
  }

  {$prefix}grow{$postfix} {
    flex-grow: 1;
  }

  {$prefix}shrink{$postfix} {
    flex-shrink: 1;
  }

// alignment in cross axis
  {$prefix}start{$postfix} {
    align-items: flex-start;
  }

  {$prefix}center{$postfix}, {$prefix}center{$separator}center{$postfix} {
    align-items: center;
  }

  {$prefix}end{$postfix} {
    align-items: flex-end;
  }

  {$prefix}stretch{$postfix} {
    align-items: stretch;
  }

// alignment in main axis
  {$prefix}justify{$separator}start{$postfix} {
    justify-content: flex-start;
  }

  {$prefix}justify{$separator}center{$postfix}, {$prefix}center{$separator}center{$postfix} {
    justify-content: center;
  }

  {$prefix}justify{$separator}end{$postfix} {
    justify-content: flex-end;
  }

  {$prefix}justify{$separator}around{$postfix} {
    justify-content: space-around;
  }

  {$prefix}justify{$postfix} {
    justify-content: space-between;
  }

  {$prefix}scroll{$postfix} {
    overflow: auto;
  }

  {$prefix}no{$separator}scroll{$postfix} {
    overflow: hidden;
  }

  for $size in $space-sizes {
    {$prefix}padding{$separator}{$size}{$postfix} {
      padding: $size;
    }

    {$prefix}padding{$separator}h{$separator}{$size}{$postfix} {
      padding-left: $size;
      padding-right: $size;
    }

    {$prefix}padding{$separator}v{$separator}{$size}{$postfix} {
      padding-top: $size;
      padding-bottom: $size;
    }

    {$prefix}padding{$separator}t{$separator}{$size}{$postfix} {
      padding-top: $size;
    }

    {$prefix}padding{$separator}b{$separator}{$size}{$postfix} {
      padding-bottom: $size;
    }

    {$prefix}padding{$separator}l{$separator}{$size}{$postfix} {
      padding-left: $size;
    }

    {$prefix}padding{$separator}r{$separator}{$size}{$postfix} {
      padding-right: $size;
    }

    {$prefix}margin{$separator}{$size}{$postfix} {
      margin: $size;
    }

    {$prefix}margin{$separator}h{$separator}{$size}{$postfix} {
      margin-left: $size;
      margin-right: $size;
    }

    {$prefix}margin{$separator}v{$separator}{$size}{$postfix} {
      margin-top: $size;
      margin-bottom: $size;
    }

    {$prefix}margin{$separator}t{$separator}{$size}{$postfix} {
      margin-top: $size;
    }

    {$prefix}margin{$separator}b{$separator}{$size}{$postfix} {
      margin-bottom: $size;
    }

    {$prefix}margin{$separator}l{$separator}{$size}{$postfix} {
      margin-left: $size;
    }

    {$prefix}margin{$separator}r{$separator}{$size}{$postfix} {
      margin-right: $size;
    }

    {$prefix}space{$separator}h{$separator}{$size}{$postfix} {
      margin-left: $size;
      &:first-child {
        margin-left: 0;
      }
    }

    {$prefix}space{$separator}v{$separator}{$size}{$postfix} {
      margin-top: $size;
      &:first-child {
        margin-top: 0;
      }
    }
  }
}

make-fixed($prefix, $separator, $postfix) {
  make-layout($prefix, $separator, $postfix);
}

make-responsive($prefix, $separator) {
  make-fixed($prefix, $separator, '');

  @media (max-width: $xxsmall) {
    make-fixed($prefix, $separator, '-xxs-down');
  }

  @media (max-width: $xsmall) {
    make-fixed($prefix, $separator, '-xs-down');
  }

  @media (max-width: $small) {
    make-fixed($prefix, $separator, '-s-down');
  }

  @media (max-width: $medium) {
    make-fixed($prefix, $separator, '-m-down');
  }

  @media (max-width: $large) {
    make-fixed($prefix, $separator, '-l-down');
  }

  @media (max-width: $xlarge) {
    make-fixed($prefix, $separator, '-xl-down');
  }

  @media (max-width: $xxlarge) {
    make-fixed($prefix, $separator, '-xxl-down');
  }

  @media (min-width: $xxsmall + 1) {
    make-fixed($prefix, $separator, '-xxs-up');
  }

  @media (min-width: $xsmall + 1) {
    make-fixed($prefix, $separator, '-xs-up');
  }

  @media (min-width: $small + 1) {
    make-fixed($prefix, $separator, '-s-up');
  }

  @media (min-width: $medium + 1) {
    make-fixed($prefix, $separator, '-m-up');
  }

  @media (min-width: $large + 1) {
    make-fixed($prefix, $separator, '-l-up');
  }

  @media (min-width: $xlarge + 1) {
    make-fixed($prefix, $separator, '-xl-up');
  }

  @media (min-width: $xxlarge + 1) {
    make-fixed($prefix, $separator, '-xxl-up');
  }
}

.{$prefix}block {
  make-responsive('&.-', '-');
}